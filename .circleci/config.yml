version: 2.1

machine:
  environment:
    SHORT_GIT_HASH: $(echo $CIRCLE_SHA1 | cut -c -7)

jobs:
  build:
    docker:
      - image:  cimg/go:1.19

      - image: cimg/postgres:15.0
        environment: 
          - POSTGRES_USER=studententry
          - POSTGRES_PASSWORD=studententry
          - POSTGRES_DB=studententry

    

    steps:
      - checkout 

      - run:
          name: Initialize env variable
          command: | 
            echo "DBUsername=studententry
                DBHost=localhost
                DBPassword=studententry
                DBPort=5432
                DBName=studententry" > .env
      - run:
          name: google service account key
          command: | 
            echo "hello word" & echo "$GCLOUD_SERVICE_KEY"
      - run:
          name:  Wait for postgres
          command:  |
              for i in `seq 1 60`;
              do
                nc -z 127.0.0.1 3306 && echo Success && exit 0
                echo -n .
                sleep 1
              done
              echo Failed waiting MySQL

      - run:
          name: FIrebase service account key
          command: | 
            echo ${GCLOUD_SERVICE_KEY} | base64 --decode --ignore-garbage > ${HOME}/FirebaseServiceKey.json

      
      - run:
          name: build go file
          command: | 
            go build main.go
      
      - run:
          name: Start Service
          command: ./main 
          background: true

  push_image:
    docker:
      - image:  google/cloud-sdk
    steps:
      - checkout
    
      - run:
          name: Configure Docker for GCR
          command: |
            # echo ${GCLOUD_SERVICE_KEY} | base64 --decode --ignore-garbage > ${HOME}/FirebaseServiceKey.json
            gcloud auth activate-service-account --key-file=${HOME}/FirebaseServiceKey.json
            gcloud auth configure-docker gcr.io

      - run:
          name: Build and Push Docker Image to GCR
          command: |
            # Replace 'your-project-id' and 'your-image-name' with your actual values
            docker build -t gcr.io/readytoworkjapan/stu-mgmt:latest .
            docker push gcr.io/readytoworkjapan/stu-mgmt:latest

workflows:
  build_and_push_image:
    jobs:
      - build
      - push_image:
          requires:
            - build
          filters:
            branches:
              only:
                - main
                - artifact